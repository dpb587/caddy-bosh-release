---
platform: linux
image_resource:
  type: docker-image
  source:
    repository: bosh/main-bosh-docker
inputs:
- name: repo
- name: stemcell
  optional: true
run:
  path: bash
  args:
  - -c
  - |
    set -euo pipefail

    . /usr/local/bin/start-bosh
    source /tmp/local-bosh/director/env
    export BOSH_DEPLOYMENT=caddy

    if [ -e stemcell/*.tgz ]; then
      stemcell_path=$( echo stemcell/*.tgz )
    else
      # TODO reminder: this will break after bosh-deployment switches to sha256
      checksum=$( bosh int --path=/resource_pools/0/stemcell/sha1 /tmp/local-bosh/director/bosh-director.yml )
      stemcell_path=$( find ~/.bosh/downloads -type f | xargs -n1 shasum | grep $checksum | awk '{ print $2 }' )
    fi

    bosh upload-stemcell "$stemcell_path"
    os=$( tar -Oxzf "$stemcell_path" stemcell.MF | grep '^operating_system: ' | awk '{ print $2 }' )

    cd repo

    bosh -n deploy -v os="$os" manifests/caddy.yml

    curl --user vcap:c1oudc0w "http://$( bosh instances --column ips | awk '{ print $1 }' ):80/headers" \
      | tee /tmp/output

    grep 'Basic dmNhcDpjMW91ZGMwdw==' /tmp/output

    # cleanup

    bosh -n delete-deployment
    bosh -n clean-up --all
    bosh delete-env "/tmp/local-bosh/director/bosh-director.yml" \
      --vars-store="/tmp/local-bosh/director/creds.yml" \
      --state="/tmp/local-bosh/director/state.json"
