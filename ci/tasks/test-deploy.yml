---
platform: linux
image_resource:
  type: docker-image
  source:
    repository: bosh/main-bosh-docker
inputs:
- name: repo
- name: stemcell
  optional: true
run:
  path: bash
  args:
  - -c
  - |
    set -euo pipefail

    start-bosh
    source /tmp/local-bosh/director/env
    export BOSH_DEPLOYMENT=caddy

    if [ -e stemcell/*.tgz ]; then
      bosh upload-stemcell stemcell/*.tgz
      os=$( tar -Oxzf stemcell/*.tgz stemcell.MF | grep '^operating_system: ' | awk '{ print $2 }' )
    else
      bosh upload-stemcell \
        --name=bosh-warden-boshlite-ubuntu-trusty-go_agent \
        --version=3586.25 \
        --sha1=b9a44806dc1bb99b0d11d7413742f3619139da0b \
        https://s3.amazonaws.com/bosh-core-stemcells/warden/bosh-stemcell-3586.25-warden-boshlite-ubuntu-trusty-go_agent.tgz
      os=ubuntu-trusty
    fi

    cd repo

    bosh -n deploy -v os="$os" manifests/caddy.yml

    curl --user vcap:c1oudc0w "http://$( bosh instances --column ips | awk '{ print $1 }' ):80/headers" \
      | tee /tmp/output

    grep 'Basic dmNhcDpjMW91ZGMwdw==' /tmp/output

    # cleanup

    bosh -n delete-deployment
    bosh -n clean-up --all
    bosh delete-env "/tmp/local-bosh/director/bosh-director.yml" \
      --vars-store="/tmp/local-bosh/director/creds.yml" \
      --state="/tmp/local-bosh/director/state.json"
